{"remainingRequest":"C:\\laragon\\www\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\laragon\\www\\hym\\node_modules\\ngx-currency\\src\\input.service.js","dependencies":[{"path":"C:\\laragon\\www\\hym\\node_modules\\ngx-currency\\src\\input.service.js","mtime":1606334973885},{"path":"C:\\laragon\\www\\hym\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { InputManager } from \"./input.manager\";\r\nvar InputService = /*@__PURE__*/ (function () {\r\n    function InputService(htmlInputElement, options) {\r\n        this.htmlInputElement = htmlInputElement;\r\n        this.options = options;\r\n        this.PER_AR_NUMBER = new Map();\r\n        this.inputManager = new InputManager(htmlInputElement);\r\n        this.initialize();\r\n    }\r\n    InputService.prototype.initialize = function () {\r\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\r\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\r\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\r\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\r\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\r\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\r\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\r\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\r\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\r\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\r\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\r\n    };\r\n    InputService.prototype.addNumber = function (keyCode) {\r\n        if (!this.rawValue) {\r\n            this.rawValue = this.applyMask(false, \"0\");\r\n        }\r\n        var keyChar = String.fromCharCode(keyCode);\r\n        var selectionStart = this.inputSelection.selectionStart;\r\n        var selectionEnd = this.inputSelection.selectionEnd;\r\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n        this.updateFieldValue(selectionStart + 1);\r\n    };\r\n    InputService.prototype.applyMask = function (isNumber, rawValue) {\r\n        var _a = this.options, allowNegative = _a.allowNegative, decimal = _a.decimal, precision = _a.precision, prefix = _a.prefix, suffix = _a.suffix, thousands = _a.thousands, nullable = _a.nullable;\r\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\r\n        var onlyNumbers = rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\r\n        if (!onlyNumbers) {\r\n            return \"\";\r\n        }\r\n        var integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\r\n            .replace(/^\\u0660*/g, \"\")\r\n            .replace(/^\\u06F0*/g, \"\")\r\n            .replace(/^0*/g, \"\")\r\n            .replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\r\n        if (thousands && integerPart.startsWith(thousands)) {\r\n            integerPart = integerPart.substring(1);\r\n        }\r\n        if (integerPart == \"\") {\r\n            integerPart = \"0\";\r\n        }\r\n        var newRawValue = integerPart;\r\n        var decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\r\n        if (precision > 0) {\r\n            newRawValue += decimal + decimalPart;\r\n        }\r\n        var isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\r\n        var operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\r\n        return operator + prefix + newRawValue + suffix;\r\n    };\r\n    InputService.prototype.clearMask = function (rawValue) {\r\n        if (this.isNullable() && rawValue === \"\")\r\n            return null;\r\n        var value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\r\n        if (this.options.thousands) {\r\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\r\n        }\r\n        if (this.options.decimal) {\r\n            value = value.replace(this.options.decimal, \".\");\r\n        }\r\n        this.PER_AR_NUMBER.forEach(function (val, key) {\r\n            var re = new RegExp(key, \"g\");\r\n            value = value.replace(re, val);\r\n        });\r\n        return parseFloat(value);\r\n    };\r\n    InputService.prototype.changeToNegative = function () {\r\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\r\n            this.rawValue = \"-\" + this.rawValue;\r\n        }\r\n    };\r\n    InputService.prototype.changeToPositive = function () {\r\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\r\n    };\r\n    InputService.prototype.removeNumber = function (keyCode) {\r\n        if (this.isNullable() && this.value == 0) {\r\n            this.rawValue = null;\r\n            return;\r\n        }\r\n        var selectionEnd = this.inputSelection.selectionEnd;\r\n        var selectionStart = this.inputSelection.selectionStart;\r\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\r\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\r\n            selectionStart = this.rawValue.length - this.options.suffix.length;\r\n        }\r\n        var move = this.rawValue.substr(selectionStart - 1, 1).match(/\\d/) ? 0 : -1;\r\n        if ((keyCode == 8 &&\r\n            selectionStart - 1 === 0 &&\r\n            !(this.rawValue.substr(selectionStart, 1).match(/\\d/))) ||\r\n            ((keyCode == 46 || keyCode == 63272) &&\r\n                selectionStart === 0 &&\r\n                !(this.rawValue.substr(selectionStart + 1, 1).match(/\\d/)))) {\r\n            move = 1;\r\n        }\r\n        ;\r\n        selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\r\n        selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\r\n        this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n        this.updateFieldValue(selectionStart + move);\r\n    };\r\n    InputService.prototype.updateFieldValue = function (selectionStart) {\r\n        var newRawValue = this.applyMask(false, this.rawValue || \"\");\r\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\r\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\r\n    };\r\n    InputService.prototype.updateOptions = function (options) {\r\n        var value = this.value;\r\n        this.options = options;\r\n        this.value = value;\r\n    };\r\n    InputService.prototype.prefixLength = function () {\r\n        return this.options.prefix.length;\r\n    };\r\n    InputService.prototype.isNullable = function () {\r\n        return this.options.nullable;\r\n    };\r\n    Object.defineProperty(InputService.prototype, \"canInputMoreNumbers\", {\r\n        get: function () {\r\n            return this.inputManager.canInputMoreNumbers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"inputSelection\", {\r\n        get: function () {\r\n            return this.inputManager.inputSelection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"rawValue\", {\r\n        get: function () {\r\n            return this.inputManager.rawValue;\r\n        },\r\n        set: function (value) {\r\n            this.inputManager.rawValue = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"storedRawValue\", {\r\n        get: function () {\r\n            return this.inputManager.storedRawValue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputService.prototype, \"value\", {\r\n        get: function () {\r\n            return this.clearMask(this.rawValue);\r\n        },\r\n        set: function (value) {\r\n            this.rawValue = this.applyMask(true, \"\" + value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InputService;\r\n}());\r\nexport { InputService };\r\n//# sourceMappingURL=input.service.js.map \r\n",null]}