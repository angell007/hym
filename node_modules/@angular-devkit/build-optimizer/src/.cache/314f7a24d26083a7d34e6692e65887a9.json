{"remainingRequest":"C:\\laragon\\www\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\laragon\\www\\hym\\node_modules\\rxjs\\operator\\repeat.js","dependencies":[{"path":"C:\\laragon\\www\\hym\\node_modules\\rxjs\\operator\\repeat.js","mtime":1614017478470},{"path":"C:\\laragon\\www\\hym\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614017462316},{"path":"C:\\laragon\\www\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1614017454693}],"contextDependencies":[],"result":["\"use strict\";\r\nvar repeat_1 = require('../operators/repeat');\r\n/**\r\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\r\n *\r\n * <img src=\"./img/repeat.png\" width=\"100%\">\r\n *\r\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\r\n * an empty Observable.\r\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\r\n * count times.\r\n * @method repeat\r\n * @owner Observable\r\n */\r\nfunction repeat(count) {\r\n    if (count === void 0) { count = -1; }\r\n    return repeat_1.repeat(count)(this);\r\n}\r\nexports.repeat = repeat;\r\n//# sourceMappingURL=repeat.js.map",null]}