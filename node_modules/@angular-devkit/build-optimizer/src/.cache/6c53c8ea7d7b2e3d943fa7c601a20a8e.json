{"remainingRequest":"C:\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\hym\\node_modules\\ngx-currency\\src\\input.handler.js","dependencies":[{"path":"C:\\hym\\node_modules\\ngx-currency\\src\\input.handler.js","mtime":1535664073624},{"path":"C:\\hym\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535664064382},{"path":"C:\\hym\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1535664056924}],"contextDependencies":[],"result":["import { InputService } from \"./input.service\";\r\nvar InputHandler = /*@__PURE__*/ (function () {\r\n    function InputHandler(htmlInputElement, options) {\r\n        this.inputService = new InputService(htmlInputElement, options);\r\n    }\r\n    InputHandler.prototype.handleCut = function (event) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.inputService.updateFieldValue();\r\n            _this.setValue(_this.inputService.value);\r\n            _this.onModelChange(_this.inputService.value);\r\n        }, 0);\r\n    };\r\n    InputHandler.prototype.handleInput = function (event) {\r\n        var keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\r\n        var rawValueLength = this.inputService.rawValue.length;\r\n        var rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\r\n        var storedRawValueLength = this.inputService.storedRawValue.length;\r\n        this.inputService.rawValue = this.inputService.storedRawValue;\r\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\r\n            this.setCursorPosition(event);\r\n            return;\r\n        }\r\n        if (rawValueLength < storedRawValueLength) {\r\n            this.inputService.removeNumber(8);\r\n        }\r\n        if (rawValueLength > storedRawValueLength) {\r\n            switch (keyCode) {\r\n                case 43:\r\n                    this.inputService.changeToPositive();\r\n                    break;\r\n                case 45:\r\n                    this.inputService.changeToNegative();\r\n                    break;\r\n                default:\r\n                    if (!this.inputService.canInputMoreNumbers) {\r\n                        return;\r\n                    }\r\n                    this.inputService.addNumber(keyCode);\r\n            }\r\n        }\r\n        this.setCursorPosition(event);\r\n        this.onModelChange(this.inputService.value);\r\n    };\r\n    InputHandler.prototype.handleKeydown = function (event) {\r\n        var keyCode = event.which || event.charCode || event.keyCode;\r\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\r\n            event.preventDefault();\r\n            var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n            if (selectionRangeLength == 0) {\r\n                this.inputService.removeNumber(keyCode);\r\n                this.onModelChange(this.inputService.value);\r\n            }\r\n            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLenght())) {\r\n                this.clearValue();\r\n            }\r\n        }\r\n    };\r\n    InputHandler.prototype.clearValue = function () {\r\n        this.setValue(this.inputService.isNullable() ? null : 0);\r\n        this.onModelChange(this.inputService.value);\r\n    };\r\n    InputHandler.prototype.handleKeypress = function (event) {\r\n        var keyCode = event.which || event.charCode || event.keyCode;\r\n        if (keyCode === 97 && event.ctrlKey) {\r\n            return;\r\n        }\r\n        switch (keyCode) {\r\n            case undefined:\r\n            case 9:\r\n            case 13:\r\n            case 37:\r\n            case 39:\r\n                return;\r\n            case 43:\r\n                this.inputService.changeToPositive();\r\n                break;\r\n            case 45:\r\n                this.inputService.changeToNegative();\r\n                break;\r\n            default:\r\n                if (this.inputService.canInputMoreNumbers) {\r\n                    var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\r\n                        this.setValue(0);\r\n                    }\r\n                    this.inputService.addNumber(keyCode);\r\n                }\r\n        }\r\n        event.preventDefault();\r\n        this.onModelChange(this.inputService.value);\r\n    };\r\n    InputHandler.prototype.handlePaste = function (event) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.inputService.updateFieldValue();\r\n            _this.setValue(_this.inputService.value);\r\n            _this.onModelChange(_this.inputService.value);\r\n        }, 1);\r\n    };\r\n    InputHandler.prototype.updateOptions = function (options) {\r\n        this.inputService.updateOptions(options);\r\n    };\r\n    InputHandler.prototype.getOnModelChange = function () {\r\n        return this.onModelChange;\r\n    };\r\n    InputHandler.prototype.setOnModelChange = function (callbackFunction) {\r\n        this.onModelChange = callbackFunction;\r\n    };\r\n    InputHandler.prototype.getOnModelTouched = function () {\r\n        return this.onModelTouched;\r\n    };\r\n    InputHandler.prototype.setOnModelTouched = function (callbackFunction) {\r\n        this.onModelTouched = callbackFunction;\r\n    };\r\n    InputHandler.prototype.setValue = function (value) {\r\n        this.inputService.value = value;\r\n    };\r\n    InputHandler.prototype.setCursorPosition = function (event) {\r\n        setTimeout(function () {\r\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\r\n        }, 0);\r\n    };\r\n    return InputHandler;\r\n}());\r\nexport { InputHandler };\r\n//# sourceMappingURL=input.handler.js.map \r\n",null]}